{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  balance: 0,\n  loan: 0,\n  loanPurpose: \"\"\n};\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return {\n        ...state,\n        balance: state.balance + action.payload\n      };\n    case \"account/withdraw\":\n      return {\n        ...state,\n        balance: state.balance - action.payload\n      };\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        loanPurpose: action.payload.purpose,\n        balance: state.balance + action.payload.amount\n      };\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan\n      };\n    default:\n      return state;\n  }\n}\nconst store = createStore(reducer);\n\n// store.dispatch({ type: \"account/deposit\", payload: 500 });\n\n// console.log(\"Hey redux ....\");\n// console.log(store.getState());\n// store.dispatch({ type: \"account/withdraw\", payload: 300 });\n// console.log(store.getState());\n// store.dispatch({\n//   type: \"account/requestLoan\",\n//   payload: { amount: 1000, purpose: \"Buy a Car\" },\n// });\n// console.log(store.getState());\n// store.dispatch({ type: \"account/payLoan\" });\n// console.log(store.getState());\n\nfunction deposit(amount) {\n  return {\n    type: \"account/deposit\",\n    payload: amount\n  };\n}\nfunction withdraw(amount) {\n  return {\n    type: \"account/withdraw\",\n    payload: amount\n  };\n}\nfunction requestLoan(amount, purpose) {\n  return {\n    type: \"account/requestLoan\",\n    payload: {\n      amount: amount,\n      purpose: purpose\n    }\n  };\n}\nfunction payLoan() {}\nstore.dispatch(deposit(100));\nconsole.log(store.getState());\nstore.dispatch(withdraw(50));\nconsole.log(store.getState());\nstore.dispatch(store.requestLoan(1000, \"to buy a car\"));\nconsole.log();","map":{"version":3,"names":["createStore","initialState","balance","loan","loanPurpose","reducer","state","action","type","payload","amount","purpose","store","deposit","withdraw","requestLoan","payLoan","dispatch","console","log","getState"],"sources":["/Users/jammichedukuruvanithinkumar/Documents/mywork/REACT_REVISION/12-redux/src/store.js"],"sourcesContent":["import { createStore } from \"redux\";\n\nconst initialState = {\n  balance: 0,\n  loan: 0,\n  loanPurpose: \"\",\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return { ...state, balance: state.balance + action.payload };\n\n    case \"account/withdraw\":\n      return { ...state, balance: state.balance - action.payload };\n\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        loanPurpose: action.payload.purpose,\n        balance: state.balance + action.payload.amount,\n      };\n\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan,\n      };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n\n// store.dispatch({ type: \"account/deposit\", payload: 500 });\n\n// console.log(\"Hey redux ....\");\n// console.log(store.getState());\n// store.dispatch({ type: \"account/withdraw\", payload: 300 });\n// console.log(store.getState());\n// store.dispatch({\n//   type: \"account/requestLoan\",\n//   payload: { amount: 1000, purpose: \"Buy a Car\" },\n// });\n// console.log(store.getState());\n// store.dispatch({ type: \"account/payLoan\" });\n// console.log(store.getState());\n\nfunction deposit(amount) {\n  return { type: \"account/deposit\", payload: amount };\n}\nfunction withdraw(amount) {\n  return { type: \"account/withdraw\", payload: amount };\n}\nfunction requestLoan(amount, purpose) {\n  return {\n    type: \"account/requestLoan\",\n    payload: { amount: amount, purpose: purpose },\n  };\n}\nfunction payLoan() {}\n\nstore.dispatch(deposit(100));\nconsole.log(store.getState());\nstore.dispatch(withdraw(50));\nconsole.log(store.getState());\nstore.dispatch(store.requestLoan(1000, \"to buy a car\"));\nconsole.log();\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,CAAC;EACPC,WAAW,EAAE;AACf,CAAC;AAED,SAASC,OAAOA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,EAAE;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,iBAAiB;MACpB,OAAO;QAAE,GAAGF,KAAK;QAAEJ,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAGK,MAAM,CAACE;MAAQ,CAAC;IAE9D,KAAK,kBAAkB;MACrB,OAAO;QAAE,GAAGH,KAAK;QAAEJ,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAGK,MAAM,CAACE;MAAQ,CAAC;IAE9D,KAAK,qBAAqB;MACxB,IAAIH,KAAK,CAACH,IAAI,GAAG,CAAC,EAAE,OAAOG,KAAK;MAChC,OAAO;QACL,GAAGA,KAAK;QACRH,IAAI,EAAEI,MAAM,CAACE,OAAO,CAACC,MAAM;QAC3BN,WAAW,EAAEG,MAAM,CAACE,OAAO,CAACE,OAAO;QACnCT,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAGK,MAAM,CAACE,OAAO,CAACC;MAC1C,CAAC;IAEH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGJ,KAAK;QACRH,IAAI,EAAE,CAAC;QACPC,WAAW,EAAE,EAAE;QACfF,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAGI,KAAK,CAACH;MACjC,CAAC;IACH;MACE,OAAOG,KAAK;EAChB;AACF;AAEA,MAAMM,KAAK,GAAGZ,WAAW,CAACK,OAAO,CAAC;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASQ,OAAOA,CAACH,MAAM,EAAE;EACvB,OAAO;IAAEF,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAEC;EAAO,CAAC;AACrD;AACA,SAASI,QAAQA,CAACJ,MAAM,EAAE;EACxB,OAAO;IAAEF,IAAI,EAAE,kBAAkB;IAAEC,OAAO,EAAEC;EAAO,CAAC;AACtD;AACA,SAASK,WAAWA,CAACL,MAAM,EAAEC,OAAO,EAAE;EACpC,OAAO;IACLH,IAAI,EAAE,qBAAqB;IAC3BC,OAAO,EAAE;MAAEC,MAAM,EAAEA,MAAM;MAAEC,OAAO,EAAEA;IAAQ;EAC9C,CAAC;AACH;AACA,SAASK,OAAOA,CAAA,EAAG,CAAC;AAEpBJ,KAAK,CAACK,QAAQ,CAACJ,OAAO,CAAC,GAAG,CAAC,CAAC;AAC5BK,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAC7BR,KAAK,CAACK,QAAQ,CAACH,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5BI,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAC7BR,KAAK,CAACK,QAAQ,CAACL,KAAK,CAACG,WAAW,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AACvDG,OAAO,CAACC,GAAG,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}