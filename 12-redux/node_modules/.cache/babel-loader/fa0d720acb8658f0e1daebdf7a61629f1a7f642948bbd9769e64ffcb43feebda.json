{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\"\n};\nfunction accontReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return {\n        ...state,\n        balance: state.balance + action.payload\n      };\n    case \"account/withdraw\":\n      return {\n        ...state,\n        balance: state.balance - action.payload\n      };\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        loanPurpose: action.payload.purpose,\n        balance: state.balance + action.payload.amount\n      };\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan\n      };\n    default:\n      return state;\n  }\n}\nfunction customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt\n      };\n    case \"customer/updateName\":\n      return {\n        ...state,\n        fullName: action.payload\n      };\n    default:\n      return initialStateCustomer;\n  }\n}\nconst rootreducer = combineReducers({\n  account: accontReducer,\n  customer: customerReducer\n});\nconst store = createStore(rootreducer);\nfunction deposit(amount) {\n  return {\n    type: \"account/deposit\",\n    payload: amount\n  };\n}\nfunction withdraw(amount) {\n  return {\n    type: \"account/withdraw\",\n    payload: amount\n  };\n}\nfunction requestLoan(amount, purpose) {\n  return {\n    type: \"account/requestLoan\",\n    payload: {\n      amount,\n      purpose\n    }\n  };\n}\nfunction payLoan() {\n  return {\n    type: \"account/payLoan\"\n  };\n}\nstore.dispatch(deposit(100));\nconsole.log(store.getState());\nstore.dispatch(withdraw(50));\nconsole.log(store.getState());\nstore.dispatch(requestLoan(1000, \"to buy a car\"));\nconsole.log(store.getState());\nstore.dispatch(payLoan());\nconsole.log(store.getState());\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: {\n      fullName,\n      nationalID,\n      createdAt: new Date().toISOString()\n    }\n  };\n}\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: fullName\n  };\n}\nstore.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\nconsole.log(store.getState());\nstore.dispatch(updateName(\"J.K.Nithin Kumar\"));\nconsole.log(store.getState());\n\n///////////\n\n// import { combineReducers, createStore } from \"redux\";\n\n// const initialState = {\n//   balance: 0,\n//   loan: 0,\n//   loanPurpose: \"\",\n// };\n\n// const initialStateCustomer = {\n//   fullName: \"\",\n//   nationalID: \"\",\n//   createdAt: \"\",\n// };\n// function accontReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"account/deposit\":\n//       return { ...state, balance: state.balance + action.payload };\n\n//     case \"account/withdraw\":\n//       return { ...state, balance: state.balance - action.payload };\n\n//     case \"account/requestLoan\":\n//       if (state.loan > 0) return state;\n//       return {\n//         ...state,\n//         loan: action.payload.amount,\n//         loanPurpose: action.payload.purpose,\n//         balance: state.balance + action.payload.amount,\n//       };\n\n//     case \"account/payLoan\":\n//       return {\n//         ...state,\n//         loan: 0,\n//         loanPurpose: \"\",\n//         balance: state.balance - state.loan,\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// function customerReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"customer/createCustomer\":\n//       return {\n//         ...state,\n//         fullName: action.payload.fullName,\n//         nationalID: action.payload.nationalID,\n//         createdAt: action.payload.createdAt,\n//       };\n//     case \"customer/updateName\":\n//       return { ...state, fullName: action.payload };\n//     default:\n//       return initialStateCustomer;\n//   }\n// }\n\n// const rootreducer = combineReducers({\n//   account: accontReducer,\n//   customer: customerReducer,\n// });\n// const store = createStore(rootreducer);\n\n// function deposit(amount) {\n//   return { type: \"account/deposit\", payload: amount };\n// }\n// function withdraw(amount) {\n//   return { type: \"account/withdraw\", payload: amount };\n// }\n// function requestLoan(amount, purpose) {\n//   return {\n//     type: \"account/requestLoan\",\n//     payload: { amount, purpose },\n//   };\n// }\n// function payLoan() {\n//   return {\n//     type: \"account/payLoan\",\n//   };\n// }\n\n// store.dispatch(deposit(100));\n// console.log(store.getState());\n// store.dispatch(withdraw(50));\n// console.log(store.getState());\n// store.dispatch(requestLoan(1000, \"to buy a car\"));\n// console.log(store.getState());\n// store.dispatch(payLoan());\n// console.log(store.getState());\n\n// function createCustomer(fullName, nationalID) {\n//   return {\n//     type: \"customer/createCustomer\",\n//     payload: {\n//       fullName,\n//       nationalID,\n//       createdAt: new Date().toISOString(),\n//     },\n//   };\n// }\n\n// function updateName(fullName) {\n//   return {\n//     type: \"customer/updateName\",\n//     payload: fullName,\n//   };\n// }\n\n// store.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\n\n// console.log(store.getState());\n\n// store.dispatch(updateName(\"J.K.Nithin Kumar\"));\n// console.log(store.getState());","map":{"version":3,"names":["combineReducers","createStore","initialStateCustomer","fullName","nationalID","createdAt","accontReducer","state","initialState","action","type","balance","payload","loan","amount","loanPurpose","purpose","customerReducer","rootreducer","account","customer","store","deposit","withdraw","requestLoan","payLoan","dispatch","console","log","getState","createCustomer","Date","toISOString","updateName"],"sources":["/Users/jammichedukuruvanithinkumar/Documents/mywork/REACT_REVISION/12-redux/src/store.js"],"sourcesContent":["import { combineReducers, createStore } from \"redux\";\n\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\",\n};\nfunction accontReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return { ...state, balance: state.balance + action.payload };\n\n    case \"account/withdraw\":\n      return { ...state, balance: state.balance - action.payload };\n\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        loanPurpose: action.payload.purpose,\n        balance: state.balance + action.payload.amount,\n      };\n\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt,\n      };\n    case \"customer/updateName\":\n      return { ...state, fullName: action.payload };\n    default:\n      return initialStateCustomer;\n  }\n}\n\nconst rootreducer = combineReducers({\n  account: accontReducer,\n  customer: customerReducer,\n});\nconst store = createStore(rootreducer);\n\nfunction deposit(amount) {\n  return { type: \"account/deposit\", payload: amount };\n}\nfunction withdraw(amount) {\n  return { type: \"account/withdraw\", payload: amount };\n}\nfunction requestLoan(amount, purpose) {\n  return {\n    type: \"account/requestLoan\",\n    payload: { amount, purpose },\n  };\n}\nfunction payLoan() {\n  return {\n    type: \"account/payLoan\",\n  };\n}\n\nstore.dispatch(deposit(100));\nconsole.log(store.getState());\nstore.dispatch(withdraw(50));\nconsole.log(store.getState());\nstore.dispatch(requestLoan(1000, \"to buy a car\"));\nconsole.log(store.getState());\nstore.dispatch(payLoan());\nconsole.log(store.getState());\n\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: {\n      fullName,\n      nationalID,\n      createdAt: new Date().toISOString(),\n    },\n  };\n}\n\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: fullName,\n  };\n}\n\nstore.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\n\nconsole.log(store.getState());\n\nstore.dispatch(updateName(\"J.K.Nithin Kumar\"));\nconsole.log(store.getState());\n\n///////////\n\n// import { combineReducers, createStore } from \"redux\";\n\n// const initialState = {\n//   balance: 0,\n//   loan: 0,\n//   loanPurpose: \"\",\n// };\n\n// const initialStateCustomer = {\n//   fullName: \"\",\n//   nationalID: \"\",\n//   createdAt: \"\",\n// };\n// function accontReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"account/deposit\":\n//       return { ...state, balance: state.balance + action.payload };\n\n//     case \"account/withdraw\":\n//       return { ...state, balance: state.balance - action.payload };\n\n//     case \"account/requestLoan\":\n//       if (state.loan > 0) return state;\n//       return {\n//         ...state,\n//         loan: action.payload.amount,\n//         loanPurpose: action.payload.purpose,\n//         balance: state.balance + action.payload.amount,\n//       };\n\n//     case \"account/payLoan\":\n//       return {\n//         ...state,\n//         loan: 0,\n//         loanPurpose: \"\",\n//         balance: state.balance - state.loan,\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// function customerReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"customer/createCustomer\":\n//       return {\n//         ...state,\n//         fullName: action.payload.fullName,\n//         nationalID: action.payload.nationalID,\n//         createdAt: action.payload.createdAt,\n//       };\n//     case \"customer/updateName\":\n//       return { ...state, fullName: action.payload };\n//     default:\n//       return initialStateCustomer;\n//   }\n// }\n\n// const rootreducer = combineReducers({\n//   account: accontReducer,\n//   customer: customerReducer,\n// });\n// const store = createStore(rootreducer);\n\n// function deposit(amount) {\n//   return { type: \"account/deposit\", payload: amount };\n// }\n// function withdraw(amount) {\n//   return { type: \"account/withdraw\", payload: amount };\n// }\n// function requestLoan(amount, purpose) {\n//   return {\n//     type: \"account/requestLoan\",\n//     payload: { amount, purpose },\n//   };\n// }\n// function payLoan() {\n//   return {\n//     type: \"account/payLoan\",\n//   };\n// }\n\n// store.dispatch(deposit(100));\n// console.log(store.getState());\n// store.dispatch(withdraw(50));\n// console.log(store.getState());\n// store.dispatch(requestLoan(1000, \"to buy a car\"));\n// console.log(store.getState());\n// store.dispatch(payLoan());\n// console.log(store.getState());\n\n// function createCustomer(fullName, nationalID) {\n//   return {\n//     type: \"customer/createCustomer\",\n//     payload: {\n//       fullName,\n//       nationalID,\n//       createdAt: new Date().toISOString(),\n//     },\n//   };\n// }\n\n// function updateName(fullName) {\n//   return {\n//     type: \"customer/updateName\",\n//     payload: fullName,\n//   };\n// }\n\n// store.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\n\n// console.log(store.getState());\n\n// store.dispatch(updateName(\"J.K.Nithin Kumar\"));\n// console.log(store.getState());\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,QAAQ,OAAO;AAEpD,MAAMC,oBAAoB,GAAG;EAC3BC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC;AACD,SAASC,aAAaA,CAACC,KAAK,GAAGC,YAAY,EAAEC,MAAM,EAAE;EACnD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,iBAAiB;MACpB,OAAO;QAAE,GAAGH,KAAK;QAAEI,OAAO,EAAEJ,KAAK,CAACI,OAAO,GAAGF,MAAM,CAACG;MAAQ,CAAC;IAE9D,KAAK,kBAAkB;MACrB,OAAO;QAAE,GAAGL,KAAK;QAAEI,OAAO,EAAEJ,KAAK,CAACI,OAAO,GAAGF,MAAM,CAACG;MAAQ,CAAC;IAE9D,KAAK,qBAAqB;MACxB,IAAIL,KAAK,CAACM,IAAI,GAAG,CAAC,EAAE,OAAON,KAAK;MAChC,OAAO;QACL,GAAGA,KAAK;QACRM,IAAI,EAAEJ,MAAM,CAACG,OAAO,CAACE,MAAM;QAC3BC,WAAW,EAAEN,MAAM,CAACG,OAAO,CAACI,OAAO;QACnCL,OAAO,EAAEJ,KAAK,CAACI,OAAO,GAAGF,MAAM,CAACG,OAAO,CAACE;MAC1C,CAAC;IAEH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGP,KAAK;QACRM,IAAI,EAAE,CAAC;QACPE,WAAW,EAAE,EAAE;QACfJ,OAAO,EAAEJ,KAAK,CAACI,OAAO,GAAGJ,KAAK,CAACM;MACjC,CAAC;IACH;MACE,OAAON,KAAK;EAChB;AACF;AAEA,SAASU,eAAeA,CAACV,KAAK,GAAGC,YAAY,EAAEC,MAAM,EAAE;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,yBAAyB;MAC5B,OAAO;QACL,GAAGH,KAAK;QACRJ,QAAQ,EAAEM,MAAM,CAACG,OAAO,CAACT,QAAQ;QACjCC,UAAU,EAAEK,MAAM,CAACG,OAAO,CAACR,UAAU;QACrCC,SAAS,EAAEI,MAAM,CAACG,OAAO,CAACP;MAC5B,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QAAE,GAAGE,KAAK;QAAEJ,QAAQ,EAAEM,MAAM,CAACG;MAAQ,CAAC;IAC/C;MACE,OAAOV,oBAAoB;EAC/B;AACF;AAEA,MAAMgB,WAAW,GAAGlB,eAAe,CAAC;EAClCmB,OAAO,EAAEb,aAAa;EACtBc,QAAQ,EAAEH;AACZ,CAAC,CAAC;AACF,MAAMI,KAAK,GAAGpB,WAAW,CAACiB,WAAW,CAAC;AAEtC,SAASI,OAAOA,CAACR,MAAM,EAAE;EACvB,OAAO;IAAEJ,IAAI,EAAE,iBAAiB;IAAEE,OAAO,EAAEE;EAAO,CAAC;AACrD;AACA,SAASS,QAAQA,CAACT,MAAM,EAAE;EACxB,OAAO;IAAEJ,IAAI,EAAE,kBAAkB;IAAEE,OAAO,EAAEE;EAAO,CAAC;AACtD;AACA,SAASU,WAAWA,CAACV,MAAM,EAAEE,OAAO,EAAE;EACpC,OAAO;IACLN,IAAI,EAAE,qBAAqB;IAC3BE,OAAO,EAAE;MAAEE,MAAM;MAAEE;IAAQ;EAC7B,CAAC;AACH;AACA,SAASS,OAAOA,CAAA,EAAG;EACjB,OAAO;IACLf,IAAI,EAAE;EACR,CAAC;AACH;AAEAW,KAAK,CAACK,QAAQ,CAACJ,OAAO,CAAC,GAAG,CAAC,CAAC;AAC5BK,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAC7BR,KAAK,CAACK,QAAQ,CAACH,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5BI,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAC7BR,KAAK,CAACK,QAAQ,CAACF,WAAW,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AACjDG,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAC7BR,KAAK,CAACK,QAAQ,CAACD,OAAO,CAAC,CAAC,CAAC;AACzBE,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAE7B,SAASC,cAAcA,CAAC3B,QAAQ,EAAEC,UAAU,EAAE;EAC5C,OAAO;IACLM,IAAI,EAAE,yBAAyB;IAC/BE,OAAO,EAAE;MACPT,QAAQ;MACRC,UAAU;MACVC,SAAS,EAAE,IAAI0B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASC,UAAUA,CAAC9B,QAAQ,EAAE;EAC5B,OAAO;IACLO,IAAI,EAAE,qBAAqB;IAC3BE,OAAO,EAAET;EACX,CAAC;AACH;AAEAkB,KAAK,CAACK,QAAQ,CAACI,cAAc,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;AAE7DH,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAE7BR,KAAK,CAACK,QAAQ,CAACO,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAC9CN,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;;AAE7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}