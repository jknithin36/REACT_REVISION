{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\nconst initialState = {\n  balance: 0,\n  loan: 0,\n  loanPurpose: \"\"\n};\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\"\n};\nfunction accontReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return {\n        ...state,\n        balance: state.balance + action.payload\n      };\n    case \"account/withdraw\":\n      return {\n        ...state,\n        balance: state.balance - action.payload\n      };\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        loanPurpose: action.payload.purpose,\n        balance: state.balance + action.payload.amount\n      };\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan\n      };\n    default:\n      return state;\n  }\n}\nfunction customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt\n      };\n    case \"customer/updateName\":\n      return {\n        ...state,\n        fullName: action.payload\n      };\n    default:\n      return initialStateCustomer;\n  }\n}\nconst rootreducer = combineReducers({\n  account: accontReducer,\n  customer: customerReducer\n});\nconst store = createStore(rootreducer);\n\n// store.dispatch({ type: \"account/deposit\", payload: 500 });\n\n// console.log(\"Hey redux ....\");\n// console.log(store.getState());\n// store.dispatch({ type: \"account/withdraw\", payload: 300 });\n// console.log(store.getState());\n// store.dispatch({\n//   type: \"account/requestLoan\",\n//   payload: { amount: 1000, purpose: \"Buy a Car\" },\n// });\n// console.log(store.getState());\n// store.dispatch({ type: \"account/payLoan\" });\n// console.log(store.getState());\n\nfunction deposit(amount) {\n  return {\n    type: \"account/deposit\",\n    payload: amount\n  };\n}\nfunction withdraw(amount) {\n  return {\n    type: \"account/withdraw\",\n    payload: amount\n  };\n}\nfunction requestLoan(amount, purpose) {\n  return {\n    type: \"account/requestLoan\",\n    payload: {\n      amount,\n      purpose\n    }\n  };\n}\nfunction payLoan() {\n  return {\n    type: \"account/payLoan\"\n  };\n}\nstore.dispatch(deposit(100));\nconsole.log(store.getState());\nstore.dispatch(withdraw(50));\nconsole.log(store.getState());\nstore.dispatch(requestLoan(1000, \"to buy a car\"));\nconsole.log(store.getState());\nstore.dispatch(payLoan());\nconsole.log(store.getState());\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: {\n      fullName,\n      nationalID,\n      createdAt: new Date().toISOString()\n    }\n  };\n}\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: fullName\n  };\n}\nstore.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\nconsole.log(store.getState());\nstore.dispatch(updateName(\"J.K.Nithin Kumar\"));\nconsole.log(store.getState());","map":{"version":3,"names":["combineReducers","createStore","initialState","balance","loan","loanPurpose","initialStateCustomer","fullName","nationalID","createdAt","accontReducer","state","action","type","payload","amount","purpose","customerReducer","rootreducer","account","customer","store","deposit","withdraw","requestLoan","payLoan","dispatch","console","log","getState","createCustomer","Date","toISOString","updateName"],"sources":["/Users/jammichedukuruvanithinkumar/Documents/mywork/REACT_REVISION/12-redux/src/store.js"],"sourcesContent":["import { combineReducers, createStore } from \"redux\";\n\nconst initialState = {\n  balance: 0,\n  loan: 0,\n  loanPurpose: \"\",\n};\n\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\",\n};\nfunction accontReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return { ...state, balance: state.balance + action.payload };\n\n    case \"account/withdraw\":\n      return { ...state, balance: state.balance - action.payload };\n\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        loanPurpose: action.payload.purpose,\n        balance: state.balance + action.payload.amount,\n      };\n\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt,\n      };\n    case \"customer/updateName\":\n      return { ...state, fullName: action.payload };\n    default:\n      return initialStateCustomer;\n  }\n}\n\nconst rootreducer = combineReducers({\n  account: accontReducer,\n  customer: customerReducer,\n});\nconst store = createStore(rootreducer);\n\n// store.dispatch({ type: \"account/deposit\", payload: 500 });\n\n// console.log(\"Hey redux ....\");\n// console.log(store.getState());\n// store.dispatch({ type: \"account/withdraw\", payload: 300 });\n// console.log(store.getState());\n// store.dispatch({\n//   type: \"account/requestLoan\",\n//   payload: { amount: 1000, purpose: \"Buy a Car\" },\n// });\n// console.log(store.getState());\n// store.dispatch({ type: \"account/payLoan\" });\n// console.log(store.getState());\n\nfunction deposit(amount) {\n  return { type: \"account/deposit\", payload: amount };\n}\nfunction withdraw(amount) {\n  return { type: \"account/withdraw\", payload: amount };\n}\nfunction requestLoan(amount, purpose) {\n  return {\n    type: \"account/requestLoan\",\n    payload: { amount, purpose },\n  };\n}\nfunction payLoan() {\n  return {\n    type: \"account/payLoan\",\n  };\n}\n\nstore.dispatch(deposit(100));\nconsole.log(store.getState());\nstore.dispatch(withdraw(50));\nconsole.log(store.getState());\nstore.dispatch(requestLoan(1000, \"to buy a car\"));\nconsole.log(store.getState());\nstore.dispatch(payLoan());\nconsole.log(store.getState());\n\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: {\n      fullName,\n      nationalID,\n      createdAt: new Date().toISOString(),\n    },\n  };\n}\n\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: fullName,\n  };\n}\n\nstore.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\n\nconsole.log(store.getState());\n\nstore.dispatch(updateName(\"J.K.Nithin Kumar\"));\nconsole.log(store.getState());\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}