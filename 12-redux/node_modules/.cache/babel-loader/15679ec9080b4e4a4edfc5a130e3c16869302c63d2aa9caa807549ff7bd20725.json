{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\nconst rootreducer = combineReducers({\n  account: accountReducer,\n  customer: customerReducer\n});\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\"\n};\nfunction customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt\n      };\n    case \"customer/updateName\":\n      return {\n        ...state,\n        fullName: action.payload\n      };\n    default:\n      return initialStateCustomer;\n  }\n}\nconst store = createStore(rootreducer);\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: {\n      fullName,\n      nationalID,\n      createdAt: new Date().toISOString()\n    }\n  };\n}\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: fullName\n  };\n}\nstore.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\nconsole.log(store.getState());\nstore.dispatch(updateName(\"J.K.Nithin Kumar\"));\nconsole.log(store.getState());\n\n///////////\n\n// import { combineReducers, createStore } from \"redux\";\n\n// const initialState = {\n//   balance: 0,\n//   loan: 0,\n//   loanPurpose: \"\",\n// };\n\n// const initialStateCustomer = {\n//   fullName: \"\",\n//   nationalID: \"\",\n//   createdAt: \"\",\n// };\n// function accontReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"account/deposit\":\n//       return { ...state, balance: state.balance + action.payload };\n\n//     case \"account/withdraw\":\n//       return { ...state, balance: state.balance - action.payload };\n\n//     case \"account/requestLoan\":\n//       if (state.loan > 0) return state;\n//       return {\n//         ...state,\n//         loan: action.payload.amount,\n//         loanPurpose: action.payload.purpose,\n//         balance: state.balance + action.payload.amount,\n//       };\n\n//     case \"account/payLoan\":\n//       return {\n//         ...state,\n//         loan: 0,\n//         loanPurpose: \"\",\n//         balance: state.balance - state.loan,\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// function customerReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"customer/createCustomer\":\n//       return {\n//         ...state,\n//         fullName: action.payload.fullName,\n//         nationalID: action.payload.nationalID,\n//         createdAt: action.payload.createdAt,\n//       };\n//     case \"customer/updateName\":\n//       return { ...state, fullName: action.payload };\n//     default:\n//       return initialStateCustomer;\n//   }\n// }\n\n// const rootreducer = combineReducers({\n//   account: accontReducer,\n//   customer: customerReducer,\n// });\n// const store = createStore(rootreducer);\n\n// function deposit(amount) {\n//   return { type: \"account/deposit\", payload: amount };\n// }\n// function withdraw(amount) {\n//   return { type: \"account/withdraw\", payload: amount };\n// }\n// function requestLoan(amount, purpose) {\n//   return {\n//     type: \"account/requestLoan\",\n//     payload: { amount, purpose },\n//   };\n// }\n// function payLoan() {\n//   return {\n//     type: \"account/payLoan\",\n//   };\n// }\n\n// store.dispatch(deposit(100));\n// console.log(store.getState());\n// store.dispatch(withdraw(50));\n// console.log(store.getState());\n// store.dispatch(requestLoan(1000, \"to buy a car\"));\n// console.log(store.getState());\n// store.dispatch(payLoan());\n// console.log(store.getState());\n\n// function createCustomer(fullName, nationalID) {\n//   return {\n//     type: \"customer/createCustomer\",\n//     payload: {\n//       fullName,\n//       nationalID,\n//       createdAt: new Date().toISOString(),\n//     },\n//   };\n// }\n\n// function updateName(fullName) {\n//   return {\n//     type: \"customer/updateName\",\n//     payload: fullName,\n//   };\n// }\n\n// store.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\n\n// console.log(store.getState());\n\n// store.dispatch(updateName(\"J.K.Nithin Kumar\"));\n// console.log(store.getState());","map":{"version":3,"names":["combineReducers","createStore","rootreducer","account","accountReducer","customer","customerReducer","initialStateCustomer","fullName","nationalID","createdAt","state","initialState","action","type","payload","store","createCustomer","Date","toISOString","updateName","dispatch","console","log","getState"],"sources":["/Users/jammichedukuruvanithinkumar/Documents/mywork/REACT_REVISION/12-redux/src/store.js"],"sourcesContent":["import { combineReducers, createStore } from \"redux\";\nconst rootreducer = combineReducers({\n  account: accountReducer,\n  customer: customerReducer,\n});\n\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\",\n};\n\nfunction customerReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt,\n      };\n    case \"customer/updateName\":\n      return { ...state, fullName: action.payload };\n    default:\n      return initialStateCustomer;\n  }\n}\n\nconst store = createStore(rootreducer);\n\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: {\n      fullName,\n      nationalID,\n      createdAt: new Date().toISOString(),\n    },\n  };\n}\n\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: fullName,\n  };\n}\n\nstore.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\n\nconsole.log(store.getState());\n\nstore.dispatch(updateName(\"J.K.Nithin Kumar\"));\nconsole.log(store.getState());\n\n///////////\n\n// import { combineReducers, createStore } from \"redux\";\n\n// const initialState = {\n//   balance: 0,\n//   loan: 0,\n//   loanPurpose: \"\",\n// };\n\n// const initialStateCustomer = {\n//   fullName: \"\",\n//   nationalID: \"\",\n//   createdAt: \"\",\n// };\n// function accontReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"account/deposit\":\n//       return { ...state, balance: state.balance + action.payload };\n\n//     case \"account/withdraw\":\n//       return { ...state, balance: state.balance - action.payload };\n\n//     case \"account/requestLoan\":\n//       if (state.loan > 0) return state;\n//       return {\n//         ...state,\n//         loan: action.payload.amount,\n//         loanPurpose: action.payload.purpose,\n//         balance: state.balance + action.payload.amount,\n//       };\n\n//     case \"account/payLoan\":\n//       return {\n//         ...state,\n//         loan: 0,\n//         loanPurpose: \"\",\n//         balance: state.balance - state.loan,\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// function customerReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case \"customer/createCustomer\":\n//       return {\n//         ...state,\n//         fullName: action.payload.fullName,\n//         nationalID: action.payload.nationalID,\n//         createdAt: action.payload.createdAt,\n//       };\n//     case \"customer/updateName\":\n//       return { ...state, fullName: action.payload };\n//     default:\n//       return initialStateCustomer;\n//   }\n// }\n\n// const rootreducer = combineReducers({\n//   account: accontReducer,\n//   customer: customerReducer,\n// });\n// const store = createStore(rootreducer);\n\n// function deposit(amount) {\n//   return { type: \"account/deposit\", payload: amount };\n// }\n// function withdraw(amount) {\n//   return { type: \"account/withdraw\", payload: amount };\n// }\n// function requestLoan(amount, purpose) {\n//   return {\n//     type: \"account/requestLoan\",\n//     payload: { amount, purpose },\n//   };\n// }\n// function payLoan() {\n//   return {\n//     type: \"account/payLoan\",\n//   };\n// }\n\n// store.dispatch(deposit(100));\n// console.log(store.getState());\n// store.dispatch(withdraw(50));\n// console.log(store.getState());\n// store.dispatch(requestLoan(1000, \"to buy a car\"));\n// console.log(store.getState());\n// store.dispatch(payLoan());\n// console.log(store.getState());\n\n// function createCustomer(fullName, nationalID) {\n//   return {\n//     type: \"customer/createCustomer\",\n//     payload: {\n//       fullName,\n//       nationalID,\n//       createdAt: new Date().toISOString(),\n//     },\n//   };\n// }\n\n// function updateName(fullName) {\n//   return {\n//     type: \"customer/updateName\",\n//     payload: fullName,\n//   };\n// }\n\n// store.dispatch(createCustomer(\"JK.Nithin Kumar\", \"123456JK\"));\n\n// console.log(store.getState());\n\n// store.dispatch(updateName(\"J.K.Nithin Kumar\"));\n// console.log(store.getState());\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,MAAMC,WAAW,GAAGF,eAAe,CAAC;EAClCG,OAAO,EAAEC,cAAc;EACvBC,QAAQ,EAAEC;AACZ,CAAC,CAAC;AAEF,MAAMC,oBAAoB,GAAG;EAC3BC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC;AAED,SAASJ,eAAeA,CAACK,KAAK,GAAGC,YAAY,EAAEC,MAAM,EAAE;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,yBAAyB;MAC5B,OAAO;QACL,GAAGH,KAAK;QACRH,QAAQ,EAAEK,MAAM,CAACE,OAAO,CAACP,QAAQ;QACjCC,UAAU,EAAEI,MAAM,CAACE,OAAO,CAACN,UAAU;QACrCC,SAAS,EAAEG,MAAM,CAACE,OAAO,CAACL;MAC5B,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QAAE,GAAGC,KAAK;QAAEH,QAAQ,EAAEK,MAAM,CAACE;MAAQ,CAAC;IAC/C;MACE,OAAOR,oBAAoB;EAC/B;AACF;AAEA,MAAMS,KAAK,GAAGf,WAAW,CAACC,WAAW,CAAC;AAEtC,SAASe,cAAcA,CAACT,QAAQ,EAAEC,UAAU,EAAE;EAC5C,OAAO;IACLK,IAAI,EAAE,yBAAyB;IAC/BC,OAAO,EAAE;MACPP,QAAQ;MACRC,UAAU;MACVC,SAAS,EAAE,IAAIQ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASC,UAAUA,CAACZ,QAAQ,EAAE;EAC5B,OAAO;IACLM,IAAI,EAAE,qBAAqB;IAC3BC,OAAO,EAAEP;EACX,CAAC;AACH;AAEAQ,KAAK,CAACK,QAAQ,CAACJ,cAAc,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;AAE7DK,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;AAE7BR,KAAK,CAACK,QAAQ,CAACD,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAC9CE,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;;AAE7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}