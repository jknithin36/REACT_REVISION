{"ast":null,"code":"var _jsxFileName = \"/Users/jammichedukuruvanithinkumar/Documents/mywork/REACT_REVISION/11-atomicBlog/src/PostContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostContext = /*#__PURE__*/createContext();\nexport const PostProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleAddPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const handleClearPosts = () => {\n    setPosts([]);\n  };\n\n  const searchedPosts = posts.filter(post => post.title.includes(searchQuery) || post.body.includes(searchQuery));\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: {\n      posts: searchedPosts,\n      onAddPost: handleAddPost,\n      onClearPosts: handleClearPosts,\n      searchQuery,\n      setSearchQuery\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostProvider, \"32dGTvJH1+VHBroR+9UaCIJOLqY=\");\n\n_c = PostProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["React","createContext","useState","PostContext","PostProvider","children","posts","setPosts","searchQuery","setSearchQuery","handleAddPost","newPost","handleClearPosts","searchedPosts","filter","post","title","includes","body","onAddPost","onClearPosts"],"sources":["/Users/jammichedukuruvanithinkumar/Documents/mywork/REACT_REVISION/11-atomicBlog/src/PostContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const PostContext = createContext();\n\nexport const PostProvider = ({ children }) => {\n  const [posts, setPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleAddPost = (newPost) => {\n    setPosts([...posts, newPost]);\n  };\n\n  const handleClearPosts = () => {\n    setPosts([]);\n  };\n\n  const searchedPosts = posts.filter(\n    (post) =>\n      post.title.includes(searchQuery) || post.body.includes(searchQuery)\n  );\n\n  return (\n    <PostContext.Provider\n      value={{\n        posts: searchedPosts,\n        onAddPost: handleAddPost,\n        onClearPosts: handleClearPosts,\n        searchQuery,\n        setSearchQuery,\n      }}\n    >\n      {children}\n    </PostContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP,OAAO,MAAMG,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMQ,aAAa,GAAIC,OAAD,IAAa;IACjCJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWK,OAAX,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BL,QAAQ,CAAC,EAAD,CAAR;EACD,CAFD;;EAIA,MAAMM,aAAa,GAAGP,KAAK,CAACQ,MAAN,CACnBC,IAAD,IACEA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBT,WAApB,KAAoCO,IAAI,CAACG,IAAL,CAAUD,QAAV,CAAmBT,WAAnB,CAFlB,CAAtB;EAKA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLF,KAAK,EAAEO,aADF;MAELM,SAAS,EAAET,aAFN;MAGLU,YAAY,EAAER,gBAHT;MAILJ,WAJK;MAKLC;IALK,CADT;IAAA,UASGJ;EATH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA9BM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}